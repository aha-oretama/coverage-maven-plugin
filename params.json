{"name":"Coverage-maven-plugin","tagline":"A maven plugin that will blame on pull requests pointing out chunks of code with low code coverage.","body":"coverage-maven-plugin [![Build Status](https://travis-ci.org/caarlos0/coverage-maven-plugin.svg?branch=master)](https://travis-ci.org/caarlos0/coverage-maven-plugin)\r\n=====================\r\n\r\nA maven plugin that will blame on pull requests pointing out\r\nchunks of code with low code coverage.\r\n\r\n## Usage\r\n\r\nYou have to setup Cobertura plugin to generate the output as XML:\r\n\r\n```xml\r\n...\r\n<build>\r\n  <plugins>\r\n    <plugin>\r\n      <groupId>org.codehaus.mojo</groupId>\r\n      <artifactId>cobertura-maven-plugin</artifactId>\r\n      <configuration>\r\n        <formats>\r\n          <format>html</format>\r\n          <format>xml</format>\r\n        </formats>\r\n      </configuration>\r\n    </plugin>\r\n  </plugins>\r\n</build>\r\n...\r\n```\r\n\r\nAnd run the following command:\r\n\r\n```bash\r\nmvn clean install cobertura:cobertura \\\r\n  com.contaazul:coverage-maven-plugin:publish \\\r\n  -Dgithub.pullRequestId=${ID_OF_THE_PULL_REQUEST} \\\r\n  -Dgithub.repositoryOwner=${REPOSITORY_OWNER} \\\r\n  -Dgithub.repositoryName=${REPOSITORY_NAME} \\\r\n  -Dgithub.oauth2=${YOUR_OAUTH2_KEY} \\\r\n  -Dfail=false \\ # optional, defaults to true. If set to false, build will not break when in low coverage\r\n  -DcommentChunks=true \\ # optional, wether to comment or not in chunks with low coverage\r\n  -DminCoverage=90 # the minimum acceptable coverage, defaults to 100\r\n```\r\n\r\nYou can get a OAUTH2 key [here](https://github.com/settings/tokens/new).\r\n\r\n## Why?\r\n\r\nWe used to manually look at our code coverage statuses, and see if our\r\nrecently added lines are with enough coverage. But this is boring, and\r\nwe are developers, and developers automate things, and so we did.\r\n\r\nPull Requests are a part of our culture, and we want good code coverage\r\nto be as well. We already have a [Sonar Plugin][sonar] that will report\r\ncode with bugs and other issues, and now we also have Code Coverage.\r\n\r\nWe configured this plugin to run within our CI Server, so, everything is\r\nautomated, we just open a pull request and the CI do the rest. You can\r\nread more about that [here](post).\r\n\r\n[post]: carlosbecker.com/posts/mvn-pr-coverage\r\n[sonar]:https://github.com/velo/sonar-pull-request-integration\r\n\r\n## How it works\r\n\r\n- It's based in Cobertura Maven plugin, but this will probably be changed\r\nin the future;\r\n- We use the egit.github library to get and put info into Github using OAUTH2;\r\n- The plugin will map the lines added in your pull request with the results\r\nprovided by Cobertura, then calc each chunk coverage, then each file coverage,\r\nand then the overral PR coverage.\r\n\r\n### TODO's\r\n\r\nPlease take a look at [this issue](https://github.com/caarlos0/coverage-maven-plugin/issues/4)\r\n\r\n\r\n","google":"UA-50762328-1","note":"Don't delete this file! It's used internally to help with page regeneration."}